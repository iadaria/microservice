syntax = "proto3";

package account;

service AccountService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {}
  rpc Login(LoginRequest) returns (LoginResponse) {}
  rpc ValidateToken(ValidateTokenRequest) returns (ValidateTokenResponse) {}
  rpc RefreshToken(RefreshTokenRequest) returns (RefreshTokenResponse) {}
}

message RegisterRequest {
  string email = 1;
  string password = 2; // some random string containing password
}

message RegisterResponse {
  string id = 1;
  string email = 2;
  bool isBlocked = 3;
}

message LoginRequest {
  string email = 1;
  string password = 2; // some random string containing password
}

message LoginResponse {
  string token = 1;
  optional string tokenType = 2; // Default is Bearer
  optional int32 expiresIn = 3;
  string refreshToken = 4; 
}

message ValidateTokenRequest {
  string token = 1;
}

message ValidateTokenResponse {
  bool valid = 1;
}

message RefreshTokenRequest {
  string oldToken = 1;
  string refreshToken = 2;
  optional string clientId = 3;
  optional string userIp = 4;
}

message RefreshTokenResponse {
  string token = 1;
  optional string tokenType = 2; // Default is Bearer
  optional int32 expiresIn = 3;
  string refreshToken = 4; 
}